[
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "VIVIENDA EN ESPAÑA",
    "section": "",
    "text": "El objetivo de este trabajo es analizar la situación en la que se encuentran los jóvenes a la hora de acceder al mercado laboral. Para ello analizaremos diferentes métricas entre las que se encuentran: Evolución de los niveles de precios de la vivienda a nivel nacional y autonómico, comparación de esta con la de los salarios reales…\nDe esta manera constataremos las dificultades a alas que se enfrentan los jóvenes españoles para emanciparse. También extraeremos conclusiones sobre si es así en todo el país o si por el contrario hay diferencias según el área geográfica.\n#Datos del trabajo\nVamos a utilizar datos de los paquetes pxR (ine), eurostat además de proveedores de datos externos.\n\n\nCódigo\n#Paquetes Preliminares\nlibrary(pxR)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(rlist)\nlibrary(fs)\nlibrary(curl)\nlibrary(rio)\nlibrary(readxl)\nlibrary(downloader)\nlibrary(writexl)\n\n#-------------------Creamos una carpeta para guardar los datos------------------\n\ndir_create(\"./docs/datos\")\n\n#Descargamos los datos y los exportamos sin pulir: \n\n#---------------------Índice de Precios de Vivienda-----------------------------\n\nurl &lt;- \"https://www.ine.es/jaxiT3/files/t/es/px/25171.px?nocab=1\"\naa &lt;- read.px(url)\n\n#Lo convertimos a CSV para simplificar y creamos un dataframe\n\nwrite.csv(aa, file = \"data.csv\", sep = \",\")\nIPV &lt;- read.csv(\"data.csv\")\nrm(list = ls()[!ls() %in% c(\"IPV\")])\n\n#Los guardamos sin arreglar\nwrite.csv(IPV,  file = \"./docs/datos/ipv.csv\")\n#-------------------------Compra-venta de vivienda------------------------------\n\nruta_xls &lt;- \"https://apps.fomento.gob.es/BoletinOnline2/sedal/34010110.XLS\"\n\ndownload.file(ruta_xls, \"datos.xls\", mode = \"wb\")\n\nnombres_hojas &lt;- c(\"2004,2005,2006,2007,2008\", \"2009,2010,2011,2012,2013\", \n                   \"2014,2015,2016,2017,2018\", \"2019,2020,2021,2022,2023\")\n# Leer todas las hojas en una lista\nfor (i in seq_along(nombres_hojas)) {\n  hoja &lt;- nombres_hojas[i]\n  df &lt;- readxl::read_excel(\"datos.xls\", sheet = i) \n  write.csv(df, file = paste0(hoja, \".csv\"), row.names = FALSE)}\n\n#Juntamos las cuatro sheets en una y después arreglaremos el desastre\ncompraventa_2004 &lt;- read.csv(\"2004,2005,2006,2007,2008.csv\")\ncompraventa_2009 &lt;- read.csv(\"2009,2010,2011,2012,2013.csv\")\ncompraventa_2014 &lt;- read.csv(\"2014,2015,2016,2017,2018.csv\")\ncompraventa_2019 &lt;- read.csv(\"2019,2020,2021,2022,2023.csv\")\n\ncv &lt;- bind_cols(compraventa_2009,compraventa_2014)\ncv &lt;- bind_cols(cv,compraventa_2019)\ncompraventa_2004 &lt;- compraventa_2004[1:nrow(cv), ]\ncv &lt;- bind_cols(cv,compraventa_2004)\n\n\ncv &lt;- cv %&gt;%\n  filter(row_number() %in% 6:72)\ncv &lt;- cv %&gt;%\n  filter(!row_number() %in% 2)\n\n#Los guardamos sin arreglar\nwrite.csv(cv,  file = \"./docs/datos/cv.csv\")\nrm(list = ls())\n\n\n#--------------------------Renta por edad y sexo--------------------------------\n\nurl3 &lt;- \"https://www.ine.es/jaxiT3/files/t/es/px/9942.px?nocab=1\"\naa &lt;- read.px(url3)\n\n#Lo convertimos a CSV para simplificar y creamos un dataframe\n\nwrite.csv(aa, file = \"data.csv\", sep = \",\")\nrenta_edad &lt;- read.csv(\"data.csv\")\n\n#Los guardamos sin arreglar\nwrite.csv(renta_edad, file = \"./docs/datos/renta_edad.csv\")\n\nrm(list = ls())\n#---------------------------Renta por nacionalidad------------------------------\n\nurl4 &lt;- \"https://www.ine.es/jaxiT3/files/t/es/px/9945.px?nocab=1\"\naa &lt;- read.px(url4)\n\n#Lo convertimos a CSV para simplificar y creamos un dataframe\n\nwrite.csv(aa, file = \"data.csv\", sep = \",\")\nrenta_nacionalidad &lt;- read.csv(\"data.csv\")\n\n#Los guardamos sin arreglar\nwrite.csv(renta_nacionalidad, file = \"./docs/datos/renta_nacionalidad.csv\")\n\nrm(list = ls())\n\n\n#---------------------Hogares por regimen de tenencia edad----------------------\n\nurl4 &lt;- \"https://www.ine.es/jaxiT3/files/t/es/px/9994.px?nocab=1\"\naa &lt;- read.px(url4)\n\n#Lo convertimos a CSV para simplificar y creamos un dataframe\n\nwrite.csv(aa, file = \"data.csv\", sep = \",\")\nvivienda_edad &lt;- read.csv(\"data.csv\")\n\n#Los guardamos sin arreglar\nwrite.csv(vivienda_edad, file = \"./docs/datos/vivienda_datos.csv\")\n\nrm(list = ls())\n\n#Borramos archivos como las sheets separadas y otros datos\nfile.remove(\"2004,2005,2006,2007,2008.csv\", \"2009,2010,2011,2012,2013.csv\",\n            \"2014,2015,2016,2017,2018.csv\", \"2019,2020,2021,2022,2023.csv\", \n            \"compraventa.csv\", \"data.csv\", \"datos.xls\", \"./docs/datos/25171.px\",\n            \"./docs/datos/34010110.XLS\")\n#&gt; [1]  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE\n\n#----------------------Procedemos a limpiar los datos---------------------------\n\n#-------------Creamos una carpeta para guardar los datos pulidos----------------\n\ndir_create(\"./datos_pulidos\")\nlibrary(zoo)\n\n###AHORA LIMPIAMOS LOS DATOS PARA TRABAJAR MEJOR CON ELLOS###\n\n#-------------------Indice de precios de la Vivienda----------------------------\n\ncv &lt;- import(file = \"./docs/datos/cv.csv\")\n\n#Elimino las columnas duplicadas indicando el nombre de la provincia \n#para dejar solo una columna de provincias\n\ncv &lt;- cv[-1,]\ncolnames(cv) &lt;- NULL\ncolumnas_duplicadas &lt;- duplicated(t(cv))\nprint(columnas_duplicadas)\n#&gt;  [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n#&gt; [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE\n#&gt; [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n#&gt; [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE\n#&gt; [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n#&gt; [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n#&gt; [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n\ncv &lt;- cv[, !columnas_duplicadas]\ncolnames(cv) &lt;- paste0(\"col_\", 1:ncol(cv))\n#Elimino otra columnaa duplicadaa que el argumento no encuenrtra \n\ncv &lt;- cv[, -62]\n\n#Doy nombre a la posición [1,2] de provincias para después poder trabajar mejor\n#Ya que convertiremos la primera fila en colnames\n\ncv[1,2] &lt;- \"Provincia\"\ncolnames(cv)\n#&gt;  [1] \"col_1\"  \"col_2\"  \"col_3\"  \"col_4\"  \"col_5\"  \"col_6\"  \"col_7\"  \"col_8\" \n#&gt;  [9] \"col_9\"  \"col_10\" \"col_11\" \"col_12\" \"col_13\" \"col_14\" \"col_15\" \"col_16\"\n#&gt; [17] \"col_17\" \"col_18\" \"col_19\" \"col_20\" \"col_21\" \"col_22\" \"col_23\" \"col_24\"\n#&gt; [25] \"col_25\" \"col_26\" \"col_27\" \"col_28\" \"col_29\" \"col_30\" \"col_31\" \"col_32\"\n#&gt; [33] \"col_33\" \"col_34\" \"col_35\" \"col_36\" \"col_37\" \"col_38\" \"col_39\" \"col_40\"\n#&gt; [41] \"col_41\" \"col_42\" \"col_43\" \"col_44\" \"col_45\" \"col_46\" \"col_47\" \"col_48\"\n#&gt; [49] \"col_49\" \"col_50\" \"col_51\" \"col_52\" \"col_53\" \"col_54\" \"col_55\" \"col_56\"\n#&gt; [57] \"col_57\" \"col_58\" \"col_59\" \"col_60\" \"col_61\" \"col_63\" \"col_64\" \"col_65\"\n#&gt; [65] \"col_66\" \"col_67\" \"col_68\" \"col_69\" \"col_70\" \"col_71\" \"col_72\" \"col_73\"\n#&gt; [73] \"col_74\" \"col_75\" \"col_76\" \"col_77\" \"col_78\" \"col_79\" \"col_80\" \"col_81\"\n#&gt; [81] \"col_82\"\n\n#Seleccionamos la primera fila del df y lo convertimos en un vector. Después, \n#Hacemos que los NA se sustituyan por el texto de su izquierda (Remplazamos NA`s\n#por el año al que corresponde esa columnas)\n\ndf &lt;- cv %&gt;%\n  slice(1) %&gt;%\n  unlist()\n\ndf &lt;- na.locf(df)\n\n#Ahora convertimos el vector en la fila 1 que después convrtiremos en colnames\n#para trabajar mejor.\n\ncv[1,] &lt;- df \n\n#Juntamos la fila 1 y 2 a partir de la tercer columna separando el texto con \"_\" \n#y le rellenamos las dos columnas restantes con los nombres que nos vengan mejor \n#para trabajar\naa &lt;- cv[1,]\naa &lt;- c(\"\",\"Provincia\",paste(cv[1,3:ncol(cv)],cv[2,3:ncol(cv)], sep = \"_\"))\n\n#Convertimos el vector aa en colnames\n\ncolnames(cv) = aa\n\n#Quitamos la primera y la segunda fila, es información que ya indica colnames\n\ncv &lt;- cv[-(1:2), -(1)]\ncolnames(cv)\n#&gt;  [1] \"Provincia\"        \"Año 2009_1º\"      \"Año 2009_2º\"      \"Año 2009_3º\"     \n#&gt;  [5] \"Año 2009_4º\"      \"Año 2010_1º\"      \"Año 2010_2º\"      \"Año 2010_3º\"     \n#&gt;  [9] \"Año 2010_4º\"      \"Año 2011_1º\"      \"Año 2011_2º\"      \"Año 2011_3º\"     \n#&gt; [13] \"Año 2011_4º\"      \"Año 2012_1º\"      \"Año 2012_2º\"      \"Año 2012_3º\"     \n#&gt; [17] \"Año 2012_4º\"      \"Año 2013_1º\"      \"Año 2013_2º\"      \"Año 2013_3º\"     \n#&gt; [21] \"Año 2013_4º\"      \"Año 2014_1º\"      \"Año 2014_2º\"      \"Año 2014_3º\"     \n#&gt; [25] \"Año 2014_4º\"      \"Año 2015_1º\"      \"Año 2015_2º\"      \"Año 2015_3º\"     \n#&gt; [29] \"Año 2015_4º\"      \"Año 2016_1º\"      \"Año 2016_2º\"      \"Año 2016_3º\"     \n#&gt; [33] \"Año 2016_4º\"      \"Año 2017_1º\"      \"Año 2017_2º\"      \"Año 2017_3º\"     \n#&gt; [37] \"Año 2017_4º\"      \"Año 2018_1º\"      \"Año 2018_2º\"      \"Año 2018_3º\"     \n#&gt; [41] \"Año 2018_4º\"      \"Año 2019_1º\"      \"Año 2019_2º\"      \"Año 2019_3º\"     \n#&gt; [45] \"Año 2019_4º\"      \"Año 2020_1º\"      \"Año 2020_2º\"      \"Año 2020_3º\"     \n#&gt; [49] \"Año 2020_4º\"      \"Año 2021_1º\"      \"Año 2021_2º\"      \"Año 2021_3º\"     \n#&gt; [53] \"Año 2021_4º\"      \"Año 2022_1º\"      \"Año 2022_2º\"      \"Año 2022_3º\"     \n#&gt; [57] \"Año 2022_4º\"      \"Año 2023_1º\"      \"Año 2023_2º\"      \"Año 2023_3º (**)\"\n#&gt; [61] \"Año 2004_1º\"      \"Año 2004_2º\"      \"Año 2004_3º\"      \"Año 2004_4º\"     \n#&gt; [65] \"Año 2005_1º\"      \"Año 2005_2º\"      \"Año 2005_3º\"      \"Año 2005_4º\"     \n#&gt; [69] \"Año 2006_1º\"      \"Año 2006_2º\"      \"Año 2006_3º\"      \"Año 2006_4º\"     \n#&gt; [73] \"Año 2007_1º\"      \"Año 2007_2º\"      \"Año 2007_3º\"      \"Año 2007_4º\"     \n#&gt; [77] \"Año 2008_1º\"      \"Año 2008_2º\"      \"Año 2008_3º\"      \"Año 2008_4º\"\n\n#Hacemos que todas las columnas que indican año_trimestre pivoten y dejen los\n#valores que contenían las transacciones por un lado y el año_trimestre por otro\n\nTransacciones_por_provincia &lt;- cv %&gt;% pivot_longer(cols = starts_with(\"Año\"), \n                                                   names_to = \"Año_Trimestre\", \n                                                   names_prefix = \"Año\", \n                                                   values_to = \"Transacciones\",\n                                                   values_drop_na = TRUE)\n\n#Guardamos en la carpeta(en formato .csv) de datos pulidos y seguimos\n\nwrite.csv(Transacciones_por_provincia, \n          file = \"datos_pulidos/Transacciones_por_povincia.csv\")\n\n#----------------Índice de precios de la vivienda-------------------------------\n\n\nipv &lt;- import(file = \"./docs/datos/ipv.csv\")\n\n#Estos datos están bien, quitamos las dos columnas que no aportan y los guardamos\nipv &lt;- ipv[,-(1:2)]\n\nwrite.csv(ipv, file = \"./datos_pulidos/indice_precio_vivienda.csv\")\n\n#rm(list = ls())\n\n\n#----------------Renta por edad-------------------------------------------------\n\nre &lt;- import(file  = \"./docs/datos/renta_edad.csv\")\n\n#Renombramos las columnas, seleccionamos lo que nos interesa y borramos el restante\n#Exportamos\nre &lt;- re %&gt;%\n  rename(renta = \"value\") %&gt;%\n  select(!c(\"V1\", \"X\"))\n\nwrite.csv(re, file = \"./datos_pulidos/renta_por_edad.csv\")\n\n\n\n\n#----------------Régimen tenencia de vivienda por edad--------------------------\n\nvd &lt;- import(file  = \"./docs/datos/vivienda_datos.csv\")\n\n#Renombramos las columnas, seleccionamos lo que nos interesa y borramos el restante\n#Exportamos\nvd&lt;- vd %&gt;%\n  rename(Porcentaje = \"value\") %&gt;%\n  select(!c(\"V1\", \"X\"))\n\nwrite.csv(vd, file = \"./datos_pulidos/tenencia_de_vivienda.csv\")\nrm(list = ls())\n\n#--------------------IMPORTAR DATOS CE / EUROSTAT-------------------------------\noptions(scipen = 999) #- para quitar la notación científica\n\nlibrary(eurostat) \nlibrary(DT) \nlibrary(tidyverse)\n\ninfo &lt;- search_eurostat(\"GDP\", type = \"all\")\nmy_table &lt;-\"sdg_08_10\"\n\n#Comprobamos que es el PIB pc\nlabel_eurostat_tables(my_table)\n#&gt; [1] \"Real GDP per capita\"\n\ndf_original &lt;- get_eurostat(my_table, time_format = 'raw', keepFlags = TRUE)\ndf_names &lt;- names(df_original)\ndf_original &lt;- label_eurostat(df_original, code = df_names, fix_duplicated = TRUE)\n\n#Creamos otro df para trabajor con él \n\ndf &lt;- df_original\n\n#Ver que hay en el df\ndf_aa &lt;- pjpv.curso.R.2022::pjp_dicc(df)\ndf_bb &lt;- pjpv.curso.R.2022::pjp_valores_unicos(df, nn = 400)\n\n#Vamos a hacer un poco de limpieza\nobj_buenos &lt;- c(\"df\", \"df_original\", \"df_bb\")\nrm(list = setdiff(ls(), obj_buenos))\n\n#Vamos a seguir arreglando el df\n\ndf &lt;- df |&gt; \n  rename(year = time_code) |&gt; \n  rename(PIB_pc = values) |&gt; \n  rename(country = geo)\n\n#Chain linked volumes (2010), euro per capita\n#Solo queremos el PIB_pc\ndf &lt;- df |&gt; \n  filter(unit == \"Chain linked volumes (2010), euro per capita\")\n\n#Eliminamos todo lo que nos molesta a la vista \ndf &lt;- df |&gt; \n  select(-c(unit_code, values_code, unit, time, na_item_code, na_item, flags))\n\ndf &lt;- df |&gt;  mutate(year =  as.numeric(year))\n\ndf &lt;- df |&gt;  mutate(iso_2_code =  eurostat::harmonize_country_code(geo_code))\n\ndf &lt;- df |&gt; \n  select(-c(geo_code, flags_code))\n\n\nlibrary(fs)\ndir_create(\"datos_pulidos\")\n\n#A continuación vamos a exportar los datos para luego importarlas más fácilmente #library(rio)\n\nexport(df, \"./datos_pulidos/PIB_pc.csv\", type = \"csv\")\n#---------------DATOS SOBRE EL SALARIO POR NIVEL DE FORMACIÓN-------------------\n\nlibrary(rio)\nlibrary(tidyverse)\nurl &lt;- \"https://www.ine.es/jaxiT3/files/t/es/csv_bdsc/13931.csv?nocab=1\"\ndf_ine &lt;- import(url)\ndf_ine_01 &lt;- df_ine |&gt; \n  filter(Decil %in% (\"Total decil\")) |&gt; \n  select(\"Periodo\", \"Tipo de jornada\", \"NIVELES DE FORMACION\", \"Total\") |&gt; \n  rename(year = Periodo) |&gt; \n  rename(jornada = 'Tipo de jornada') |&gt; \n  rename(formacion = 'NIVELES DE FORMACION') |&gt;\n  rename(salario = Total)\n\n#VAMOS A CONVERTIR LA VARIABLE salario A NUMERIC\n\n#R y el INE me han jodiedo la vida para pasar esto a numeric (antes no funcionaba)\ndf_ine_01 &lt;- df_ine_01 |&gt; \n  mutate(salario = as.numeric(gsub(\",\", \".\", gsub(\"\\\\.\", \"\", salario))))\n\nexport(df_ine_01,\"./datos_pulidos/salario_formacion.csv\", type = \"csv\")\n\n\n#-----------------------DATOS SOBRE EL SALARIO POR EDADES-----------------------\n\nurl_1 &lt;- \"https://www.ine.es/jaxiT3/files/t/es/csv_bdsc/13928.csv?nocab=1\"\ndf_ine_x1 &lt;- import(url_1)\n\ndf_ine_02 &lt;- df_ine_x1 |&gt; \n  filter(Decil %in% (\"Total decil\")) |&gt;\n  select(\"Periodo\", \"Tipo de jornada\", \"Grupo de edad\", \"Total\") |&gt; \n  rename(year = Periodo) |&gt; \n  rename(jornada = 'Tipo de jornada') |&gt; \n  rename(grupo_edad = 'Grupo de edad') |&gt;\n  rename(salario = Total)\n\n#PASAMOS A NUMERIC\ndf_ine_02 &lt;- df_ine_02 |&gt; \n  mutate(salario = as.numeric(gsub(\",\", \".\", gsub(\"\\\\.\", \"\", salario))))\n\nexport(df_ine_02,\"./datos_pulidos/salario_grupo_edad.csv\", type = \"csv\")\n#------------------------------DATOS SOBRE EL IPC-------------------------------\n\nurl_2 &lt;- \"https://www.ine.es/jaxiT3/files/t/es/csv_bdsc/50908.csv?nocab=1\"\ndf_ipc &lt;- import(url_2)\n\ndf_ipc_01 &lt;- df_ipc |&gt; \n  filter(`Grupos ECOICOP` %in% c(\"Índice general\", \"04 Vivienda, agua, electricidad, gas y otros combustibles\")) |&gt; \n  select(\"Periodo\", \"Grupos ECOICOP\", \"Tipo de dato\", \"Total\") |&gt; \n  rename(year = Periodo) |&gt;\n  rename(grupo = 'Grupos ECOICOP') |&gt; \n  rename(tipo_dato = `Tipo de dato` ) \n\n#PASAMOS A NUMERIC\ndf_ipc_01 &lt;- df_ipc_01 |&gt; \n  mutate(Total = as.numeric(gsub(\",\", \".\", gsub(\"\\\\.\", \"\", Total))))\n\n#PARA SEPARAR EN LA VARIABLE YEAR LOS DATOS POR AÑOS Y MESES\n#df_sep &lt;- df_ipc_01 |&gt; \n#  separate(col = year, into = c(\"year\", \"month\"), sep = \"M\")\n\n#df_sep &lt;- df_sep |&gt; \n#  mutate(month = paste0(\"M\", month))\n\nexport(df_ipc_01, \"./datos_pulidos/IPC_mas_vivienda.csv\", type = \"csv\")\n\n\n\n\n\nIniciaremos analizando los datos de renta según la edad (como pueden imaginar, los jóvenes constituyen el grupo poblacional que dispone de menos renta), para, a continuación, adentrarnos en datos que muestran la evolución de los precios de la vivienda.\n\n\n\nUn pingüino chulo\n\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:\n\n\n\n\n\n\n\n\n\n\n\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\n\nCódigo\nlibrary(tidyverse)\n\n\nArreglo los datos\n\n\nCódigo\n#- cojos datos de pingüinos y arreglo un poco \ndf &lt;- palmerpenguins::penguins %&gt;% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %&gt;% \n  tidyr::drop_na()\n\n\n\n\n\n\n\nCódigo\n#- primer gráfico\np &lt;- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\n#- segundo gráfico\np &lt;- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\n#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData!!\n\n\n\n\n\n\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n\n\n current session info \n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16 ucrt)\n os       Windows 11 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Madrid\n date     2023-12-18\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package           * version    date (UTC) lib source\n assertthat          0.2.1      2019-03-21 [1] CRAN (R 4.3.1)\n backports           1.4.1      2021-12-13 [1] CRAN (R 4.3.0)\n bibtex              0.5.1      2023-01-26 [1] CRAN (R 4.3.1)\n bit                 4.0.5      2022-11-15 [1] CRAN (R 4.3.1)\n bit64               4.0.5      2020-08-30 [1] CRAN (R 4.3.1)\n broom               1.0.5      2023-06-09 [1] CRAN (R 4.3.1)\n cellranger          1.1.0      2016-07-27 [1] CRAN (R 4.3.1)\n class               7.3-22     2023-05-03 [2] CRAN (R 4.3.1)\n classInt            0.4-10     2023-09-05 [1] CRAN (R 4.3.1)\n cli                 3.6.1      2023-03-23 [1] CRAN (R 4.3.1)\n clipr               0.8.0      2022-02-22 [1] CRAN (R 4.3.1)\n colorspace          2.1-0      2023-01-23 [1] CRAN (R 4.3.1)\n countrycode         1.5.0      2023-05-30 [1] CRAN (R 4.3.1)\n crayon              1.5.2      2022-09-29 [1] CRAN (R 4.3.1)\n curl              * 5.2.0      2023-12-08 [1] CRAN (R 4.3.2)\n data.table        * 1.14.8     2023-02-17 [1] CRAN (R 4.3.1)\n desc                1.4.2      2022-09-08 [1] CRAN (R 4.3.1)\n details             0.3.0      2022-03-27 [1] CRAN (R 4.3.2)\n digest              0.6.33     2023-07-07 [1] CRAN (R 4.3.1)\n downloader        * 0.4        2015-07-09 [1] CRAN (R 4.3.2)\n dplyr             * 1.1.3      2023-09-03 [1] CRAN (R 4.3.1)\n DT                * 0.31       2023-12-09 [1] CRAN (R 4.3.2)\n e1071               1.7-13     2023-02-01 [1] CRAN (R 4.3.1)\n eurostat          * 3.8.2      2023-03-06 [1] CRAN (R 4.3.2)\n evaluate            0.21       2023-05-05 [1] CRAN (R 4.3.1)\n fansi               1.0.4      2023-01-22 [1] CRAN (R 4.3.1)\n farver              2.1.1      2022-07-06 [1] CRAN (R 4.3.1)\n fastmap             1.1.1      2023-02-24 [1] CRAN (R 4.3.1)\n forcats           * 1.0.0      2023-01-29 [1] CRAN (R 4.3.1)\n fs                * 1.6.3      2023-07-20 [1] CRAN (R 4.3.1)\n generics            0.1.3      2022-07-05 [1] CRAN (R 4.3.1)\n ggplot2           * 3.4.4      2023-10-12 [1] CRAN (R 4.3.2)\n glue                1.6.2      2022-02-24 [1] CRAN (R 4.3.1)\n gtable              0.3.4      2023-08-21 [1] CRAN (R 4.3.1)\n here                1.0.1      2020-12-13 [1] CRAN (R 4.3.1)\n hms                 1.1.3      2023-03-21 [1] CRAN (R 4.3.1)\n htmltools           0.5.6      2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets         1.6.2      2023-03-17 [1] CRAN (R 4.3.1)\n httr                1.4.7      2023-08-15 [1] CRAN (R 4.3.1)\n ISOweek             0.6-2      2011-09-07 [1] CRAN (R 4.3.1)\n jsonlite            1.8.7      2023-06-29 [1] CRAN (R 4.3.1)\n KernSmooth          2.23-21    2023-05-03 [2] CRAN (R 4.3.1)\n knitr               1.45       2023-10-30 [1] CRAN (R 4.3.2)\n labeling            0.4.3      2023-08-29 [1] CRAN (R 4.3.1)\n lattice             0.21-8     2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle           1.0.3      2022-10-07 [1] CRAN (R 4.3.1)\n lubridate         * 1.9.2      2023-02-10 [1] CRAN (R 4.3.1)\n magrittr            2.0.3      2022-03-30 [1] CRAN (R 4.3.1)\n Matrix              1.6-1.1    2023-09-18 [1] CRAN (R 4.3.1)\n mgcv                1.8-42     2023-03-02 [2] CRAN (R 4.3.1)\n munsell             0.5.0      2018-06-12 [1] CRAN (R 4.3.1)\n nlme                3.1-162    2023-01-31 [2] CRAN (R 4.3.1)\n palmerpenguins      0.1.1      2022-08-15 [1] CRAN (R 4.3.1)\n pillar              1.9.0      2023-03-22 [1] CRAN (R 4.3.1)\n pjpv.curso.R.2022   0.0.0.9000 2023-09-20 [1] Github (perezp44/pjpv.curso.R.2022@bd4dd73)\n pkgconfig           2.0.3      2019-09-22 [1] CRAN (R 4.3.1)\n plyr              * 1.8.8      2022-11-11 [1] CRAN (R 4.3.1)\n png                 0.1-8      2022-11-29 [1] CRAN (R 4.3.0)\n proxy               0.4-27     2022-06-09 [1] CRAN (R 4.3.1)\n purrr             * 1.0.2      2023-08-10 [1] CRAN (R 4.3.1)\n pxR               * 0.42.7     2022-11-23 [1] CRAN (R 4.3.2)\n R.methodsS3         1.8.2      2022-06-13 [1] CRAN (R 4.3.0)\n R.oo                1.25.0     2022-06-12 [1] CRAN (R 4.3.0)\n R.utils             2.12.2     2022-11-11 [1] CRAN (R 4.3.1)\n R6                  2.5.1      2021-08-19 [1] CRAN (R 4.3.1)\n Rcpp                1.0.11     2023-07-06 [1] CRAN (R 4.3.1)\n readr             * 2.1.4      2023-02-10 [1] CRAN (R 4.3.1)\n readxl            * 1.4.3      2023-07-06 [1] CRAN (R 4.3.2)\n RefManageR          1.4.0      2022-09-30 [1] CRAN (R 4.3.1)\n regions             0.1.8      2021-06-21 [1] CRAN (R 4.3.1)\n reshape2          * 1.4.4      2020-04-09 [1] CRAN (R 4.3.1)\n rio               * 1.0.1      2023-09-19 [1] CRAN (R 4.3.1)\n RJSONIO           * 1.3-1.9    2023-11-27 [1] CRAN (R 4.3.2)\n rlang               1.1.1      2023-04-28 [1] CRAN (R 4.3.1)\n rlist             * 0.4.6.2    2021-09-03 [1] CRAN (R 4.3.2)\n rmarkdown           2.24       2023-08-14 [1] CRAN (R 4.3.1)\n rprojroot           2.0.3      2022-04-02 [1] CRAN (R 4.3.1)\n rstudioapi          0.15.0     2023-07-07 [1] CRAN (R 4.3.1)\n scales              1.2.1      2022-08-20 [1] CRAN (R 4.3.1)\n sessioninfo         1.2.2      2021-12-06 [1] CRAN (R 4.3.2)\n stringi             1.7.12     2023-01-11 [1] CRAN (R 4.3.0)\n stringr           * 1.5.1      2023-11-14 [1] CRAN (R 4.3.2)\n tibble            * 3.2.1      2023-03-20 [1] CRAN (R 4.3.1)\n tidyr             * 1.3.0      2023-01-24 [1] CRAN (R 4.3.1)\n tidyselect          1.2.0      2022-10-10 [1] CRAN (R 4.3.1)\n tidyverse         * 2.0.0      2023-02-22 [1] CRAN (R 4.3.1)\n timechange          0.2.0      2023-01-11 [1] CRAN (R 4.3.1)\n tzdb                0.4.0      2023-05-12 [1] CRAN (R 4.3.1)\n utf8                1.2.3      2023-01-31 [1] CRAN (R 4.3.1)\n vctrs               0.6.3      2023-06-14 [1] CRAN (R 4.3.1)\n vroom               1.6.3      2023-04-28 [1] CRAN (R 4.3.1)\n withr               2.5.0      2022-03-03 [1] CRAN (R 4.3.1)\n writexl           * 1.4.2      2023-01-06 [1] CRAN (R 4.3.1)\n xfun                0.40       2023-08-09 [1] CRAN (R 4.3.1)\n xml2                1.3.5      2023-07-06 [1] CRAN (R 4.3.1)\n yaml                2.3.7      2023-01-23 [1] CRAN (R 4.3.0)\n zoo               * 1.8-12     2023-04-13 [1] CRAN (R 4.3.1)\n\n [1] C:/Users/Joel Seguí Far/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.1/library\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "my_trabajo_BigData.html#evolución-de-la-renta-neta-por-edad",
    "href": "my_trabajo_BigData.html#evolución-de-la-renta-neta-por-edad",
    "title": "VIVIENDA EN ESPAÑA",
    "section": "",
    "text": "Iniciaremos analizando los datos de renta según la edad (como pueden imaginar, los jóvenes constituyen el grupo poblacional que dispone de menos renta), para, a continuación, adentrarnos en datos que muestran la evolución de los precios de la vivienda.\n\n\n\nUn pingüino chulo\n\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "my_trabajo_BigData.html#algunos-gráficos",
    "href": "my_trabajo_BigData.html#algunos-gráficos",
    "title": "VIVIENDA EN ESPAÑA",
    "section": "",
    "text": "Bueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\n\nCódigo\nlibrary(tidyverse)\n\n\nArreglo los datos\n\n\nCódigo\n#- cojos datos de pingüinos y arreglo un poco \ndf &lt;- palmerpenguins::penguins %&gt;% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %&gt;% \n  tidyr::drop_na()\n\n\n\n\n\n\n\nCódigo\n#- primer gráfico\np &lt;- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\n#- segundo gráfico\np &lt;- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCódigo\n#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData!!\n\n\n\n\n\n\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n\n\n current session info \n\n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16 ucrt)\n os       Windows 11 x64 (build 22631)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Madrid\n date     2023-12-18\n pandoc   3.1.1 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package           * version    date (UTC) lib source\n assertthat          0.2.1      2019-03-21 [1] CRAN (R 4.3.1)\n backports           1.4.1      2021-12-13 [1] CRAN (R 4.3.0)\n bibtex              0.5.1      2023-01-26 [1] CRAN (R 4.3.1)\n bit                 4.0.5      2022-11-15 [1] CRAN (R 4.3.1)\n bit64               4.0.5      2020-08-30 [1] CRAN (R 4.3.1)\n broom               1.0.5      2023-06-09 [1] CRAN (R 4.3.1)\n cellranger          1.1.0      2016-07-27 [1] CRAN (R 4.3.1)\n class               7.3-22     2023-05-03 [2] CRAN (R 4.3.1)\n classInt            0.4-10     2023-09-05 [1] CRAN (R 4.3.1)\n cli                 3.6.1      2023-03-23 [1] CRAN (R 4.3.1)\n clipr               0.8.0      2022-02-22 [1] CRAN (R 4.3.1)\n colorspace          2.1-0      2023-01-23 [1] CRAN (R 4.3.1)\n countrycode         1.5.0      2023-05-30 [1] CRAN (R 4.3.1)\n crayon              1.5.2      2022-09-29 [1] CRAN (R 4.3.1)\n curl              * 5.2.0      2023-12-08 [1] CRAN (R 4.3.2)\n data.table        * 1.14.8     2023-02-17 [1] CRAN (R 4.3.1)\n desc                1.4.2      2022-09-08 [1] CRAN (R 4.3.1)\n details             0.3.0      2022-03-27 [1] CRAN (R 4.3.2)\n digest              0.6.33     2023-07-07 [1] CRAN (R 4.3.1)\n downloader        * 0.4        2015-07-09 [1] CRAN (R 4.3.2)\n dplyr             * 1.1.3      2023-09-03 [1] CRAN (R 4.3.1)\n DT                * 0.31       2023-12-09 [1] CRAN (R 4.3.2)\n e1071               1.7-13     2023-02-01 [1] CRAN (R 4.3.1)\n eurostat          * 3.8.2      2023-03-06 [1] CRAN (R 4.3.2)\n evaluate            0.21       2023-05-05 [1] CRAN (R 4.3.1)\n fansi               1.0.4      2023-01-22 [1] CRAN (R 4.3.1)\n farver              2.1.1      2022-07-06 [1] CRAN (R 4.3.1)\n fastmap             1.1.1      2023-02-24 [1] CRAN (R 4.3.1)\n forcats           * 1.0.0      2023-01-29 [1] CRAN (R 4.3.1)\n fs                * 1.6.3      2023-07-20 [1] CRAN (R 4.3.1)\n generics            0.1.3      2022-07-05 [1] CRAN (R 4.3.1)\n ggplot2           * 3.4.4      2023-10-12 [1] CRAN (R 4.3.2)\n glue                1.6.2      2022-02-24 [1] CRAN (R 4.3.1)\n gtable              0.3.4      2023-08-21 [1] CRAN (R 4.3.1)\n here                1.0.1      2020-12-13 [1] CRAN (R 4.3.1)\n hms                 1.1.3      2023-03-21 [1] CRAN (R 4.3.1)\n htmltools           0.5.6      2023-08-10 [1] CRAN (R 4.3.1)\n htmlwidgets         1.6.2      2023-03-17 [1] CRAN (R 4.3.1)\n httr                1.4.7      2023-08-15 [1] CRAN (R 4.3.1)\n ISOweek             0.6-2      2011-09-07 [1] CRAN (R 4.3.1)\n jsonlite            1.8.7      2023-06-29 [1] CRAN (R 4.3.1)\n KernSmooth          2.23-21    2023-05-03 [2] CRAN (R 4.3.1)\n knitr               1.45       2023-10-30 [1] CRAN (R 4.3.2)\n labeling            0.4.3      2023-08-29 [1] CRAN (R 4.3.1)\n lattice             0.21-8     2023-04-05 [2] CRAN (R 4.3.1)\n lifecycle           1.0.3      2022-10-07 [1] CRAN (R 4.3.1)\n lubridate         * 1.9.2      2023-02-10 [1] CRAN (R 4.3.1)\n magrittr            2.0.3      2022-03-30 [1] CRAN (R 4.3.1)\n Matrix              1.6-1.1    2023-09-18 [1] CRAN (R 4.3.1)\n mgcv                1.8-42     2023-03-02 [2] CRAN (R 4.3.1)\n munsell             0.5.0      2018-06-12 [1] CRAN (R 4.3.1)\n nlme                3.1-162    2023-01-31 [2] CRAN (R 4.3.1)\n palmerpenguins      0.1.1      2022-08-15 [1] CRAN (R 4.3.1)\n pillar              1.9.0      2023-03-22 [1] CRAN (R 4.3.1)\n pjpv.curso.R.2022   0.0.0.9000 2023-09-20 [1] Github (perezp44/pjpv.curso.R.2022@bd4dd73)\n pkgconfig           2.0.3      2019-09-22 [1] CRAN (R 4.3.1)\n plyr              * 1.8.8      2022-11-11 [1] CRAN (R 4.3.1)\n png                 0.1-8      2022-11-29 [1] CRAN (R 4.3.0)\n proxy               0.4-27     2022-06-09 [1] CRAN (R 4.3.1)\n purrr             * 1.0.2      2023-08-10 [1] CRAN (R 4.3.1)\n pxR               * 0.42.7     2022-11-23 [1] CRAN (R 4.3.2)\n R.methodsS3         1.8.2      2022-06-13 [1] CRAN (R 4.3.0)\n R.oo                1.25.0     2022-06-12 [1] CRAN (R 4.3.0)\n R.utils             2.12.2     2022-11-11 [1] CRAN (R 4.3.1)\n R6                  2.5.1      2021-08-19 [1] CRAN (R 4.3.1)\n Rcpp                1.0.11     2023-07-06 [1] CRAN (R 4.3.1)\n readr             * 2.1.4      2023-02-10 [1] CRAN (R 4.3.1)\n readxl            * 1.4.3      2023-07-06 [1] CRAN (R 4.3.2)\n RefManageR          1.4.0      2022-09-30 [1] CRAN (R 4.3.1)\n regions             0.1.8      2021-06-21 [1] CRAN (R 4.3.1)\n reshape2          * 1.4.4      2020-04-09 [1] CRAN (R 4.3.1)\n rio               * 1.0.1      2023-09-19 [1] CRAN (R 4.3.1)\n RJSONIO           * 1.3-1.9    2023-11-27 [1] CRAN (R 4.3.2)\n rlang               1.1.1      2023-04-28 [1] CRAN (R 4.3.1)\n rlist             * 0.4.6.2    2021-09-03 [1] CRAN (R 4.3.2)\n rmarkdown           2.24       2023-08-14 [1] CRAN (R 4.3.1)\n rprojroot           2.0.3      2022-04-02 [1] CRAN (R 4.3.1)\n rstudioapi          0.15.0     2023-07-07 [1] CRAN (R 4.3.1)\n scales              1.2.1      2022-08-20 [1] CRAN (R 4.3.1)\n sessioninfo         1.2.2      2021-12-06 [1] CRAN (R 4.3.2)\n stringi             1.7.12     2023-01-11 [1] CRAN (R 4.3.0)\n stringr           * 1.5.1      2023-11-14 [1] CRAN (R 4.3.2)\n tibble            * 3.2.1      2023-03-20 [1] CRAN (R 4.3.1)\n tidyr             * 1.3.0      2023-01-24 [1] CRAN (R 4.3.1)\n tidyselect          1.2.0      2022-10-10 [1] CRAN (R 4.3.1)\n tidyverse         * 2.0.0      2023-02-22 [1] CRAN (R 4.3.1)\n timechange          0.2.0      2023-01-11 [1] CRAN (R 4.3.1)\n tzdb                0.4.0      2023-05-12 [1] CRAN (R 4.3.1)\n utf8                1.2.3      2023-01-31 [1] CRAN (R 4.3.1)\n vctrs               0.6.3      2023-06-14 [1] CRAN (R 4.3.1)\n vroom               1.6.3      2023-04-28 [1] CRAN (R 4.3.1)\n withr               2.5.0      2022-03-03 [1] CRAN (R 4.3.1)\n writexl           * 1.4.2      2023-01-06 [1] CRAN (R 4.3.1)\n xfun                0.40       2023-08-09 [1] CRAN (R 4.3.1)\n xml2                1.3.5      2023-07-06 [1] CRAN (R 4.3.1)\n yaml                2.3.7      2023-01-23 [1] CRAN (R 4.3.0)\n zoo               * 1.8-12     2023-04-13 [1] CRAN (R 4.3.1)\n\n [1] C:/Users/Joel Seguí Far/AppData/Local/R/win-library/4.3\n [2] C:/Program Files/R/R-4.3.1/library\n\n──────────────────────────────────────────────────────────────────────────────"
  }
]