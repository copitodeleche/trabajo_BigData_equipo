---
title: "VIVIENDA EN ESPAÑA"
description: |
  Vamos a analizar el mercado de la vivienda y comprarlo con su accesibilidad de los jóvenes 
author:   
  - Saúl Gil\n   
  - Pedro Peñalver\n
  - Joel Seguí
date: 2023-11-01                           #--
categories: [Trabajo BigData, Vivienda]      #--
image: "./imagenes/my_favicon.png"
title-block-banner: true #- {true, false, "green","#AA0000"}
title-block-banner-color: "lightgrey"    #-"#FFFFFF" 
toc-depth: 3
smooth-scroll: true
format: 
  html:
    #backgroundcolor: "#F1F3F4"
    #embed-resources: true
    link-external-newwindow: true
    #css: ./assets/my_css_file.css   #- CUIDADO!!!!
code-tools: true
code-link: true
---

# Introducción 

El objetivo de este trabajo es analizar la situación en la que se encuentran los jóvenes a la hora de acceder al mercado laboral. Para ello analizaremos diferentes métricas entre las que se encuentran: Evolución de los niveles de precios de la vivienda a nivel nacional y autonómico, comparación de esta con la de los salarios reales…

De esta manera constataremos las dificultades a alas que se enfrentan los jóvenes españoles para emanciparse. También extraeremos conclusiones sobre si es así en todo el país o si por el contrario hay diferencias según el área geográfica. 

# Datos del trabajo

::: {.panel-tabset}

# Datos

Vamos a utilizar datos de los paquetes `pxR` <i>(ine)</I>, `eurostat` además de proveedores de datos externos.

# Código

```{R}
#Paquetes Preliminares
library(pxR)
library(tidyverse)
library(data.table)
library(rlist)
library(fs)
library(curl)
library(rio)
library(readxl)
library(downloader)
library(writexl)

#-------------------Creamos una carpeta para guardar los datos------------------

dir_create("./docs/datos")

#Descargamos los datos y los exportamos sin pulir: 

#---------------------Índice de Precios de Vivienda-----------------------------

url <- "https://www.ine.es/jaxiT3/files/t/es/px/25171.px?nocab=1"
aa <- read.px(url)

#Lo convertimos a CSV para simplificar y creamos un dataframe

write.csv(aa, file = "data.csv", sep = ",")
IPV <- read.csv("data.csv")
rm(list = ls()[!ls() %in% c("IPV")])

#Los guardamos sin arreglar
write.csv(IPV,  file = "./docs/datos/ipv.csv")
#-------------------------Compra-venta de vivienda------------------------------

ruta_xls <- "https://apps.fomento.gob.es/BoletinOnline2/sedal/34010110.XLS"

download.file(ruta_xls, "datos.xls", mode = "wb")

nombres_hojas <- c("2004,2005,2006,2007,2008", "2009,2010,2011,2012,2013", 
                   "2014,2015,2016,2017,2018", "2019,2020,2021,2022,2023")
# Leer todas las hojas en una lista
for (i in seq_along(nombres_hojas)) {
  hoja <- nombres_hojas[i]
  df <- readxl::read_excel("datos.xls", sheet = i) 
  write.csv(df, file = paste0(hoja, ".csv"), row.names = FALSE)}

#Juntamos las cuatro sheets en una y después arreglaremos el desastre
compraventa_2004 <- read.csv("2004,2005,2006,2007,2008.csv")
compraventa_2009 <- read.csv("2009,2010,2011,2012,2013.csv")
compraventa_2014 <- read.csv("2014,2015,2016,2017,2018.csv")
compraventa_2019 <- read.csv("2019,2020,2021,2022,2023.csv")

cv <- bind_cols(compraventa_2009,compraventa_2014)
cv <- bind_cols(cv,compraventa_2019)
compraventa_2004 <- compraventa_2004[1:nrow(cv), ]
cv <- bind_cols(cv,compraventa_2004)


cv <- cv %>%
  filter(row_number() %in% 6:72)
cv <- cv %>%
  filter(!row_number() %in% 2)

#Los guardamos sin arreglar
write.csv(cv,  file = "./docs/datos/cv.csv")
rm(list = ls())


#--------------------------Renta por edad y sexo--------------------------------

url3 <- "https://www.ine.es/jaxiT3/files/t/es/px/9942.px?nocab=1"
aa <- read.px(url3)

#Lo convertimos a CSV para simplificar y creamos un dataframe

write.csv(aa, file = "data.csv", sep = ",")
renta_edad <- read.csv("data.csv")

#Los guardamos sin arreglar
write.csv(renta_edad, file = "./docs/datos/renta_edad.csv")

rm(list = ls())
#---------------------------Renta por nacionalidad------------------------------

url4 <- "https://www.ine.es/jaxiT3/files/t/es/px/9945.px?nocab=1"
aa <- read.px(url4)

#Lo convertimos a CSV para simplificar y creamos un dataframe

write.csv(aa, file = "data.csv", sep = ",")
renta_nacionalidad <- read.csv("data.csv")

#Los guardamos sin arreglar
write.csv(renta_nacionalidad, file = "./docs/datos/renta_nacionalidad.csv")

rm(list = ls())


#---------------------Hogares por regimen de tenencia edad----------------------

url4 <- "https://www.ine.es/jaxiT3/files/t/es/px/9994.px?nocab=1"
aa <- read.px(url4)

#Lo convertimos a CSV para simplificar y creamos un dataframe

write.csv(aa, file = "data.csv", sep = ",")
vivienda_edad <- read.csv("data.csv")

#Los guardamos sin arreglar
write.csv(vivienda_edad, file = "./docs/datos/vivienda_datos.csv")

rm(list = ls())

#Borramos archivos como las sheets separadas y otros datos
file.remove("2004,2005,2006,2007,2008.csv", "2009,2010,2011,2012,2013.csv",
            "2014,2015,2016,2017,2018.csv", "2019,2020,2021,2022,2023.csv", 
            "compraventa.csv", "data.csv", "datos.xls", "./docs/datos/25171.px",
            "./docs/datos/34010110.XLS")

#----------------------Procedemos a limpiar los datos---------------------------

#-------------Creamos una carpeta para guardar los datos pulidos----------------

dir_create("./datos_pulidos")
library(zoo)

###AHORA LIMPIAMOS LOS DATOS PARA TRABAJAR MEJOR CON ELLOS###

#-------------------Indice de precios de la Vivienda----------------------------

cv <- import(file = "./docs/datos/cv.csv")

#Elimino las columnas duplicadas indicando el nombre de la provincia 
#para dejar solo una columna de provincias

cv <- cv[-1,]
colnames(cv) <- NULL
columnas_duplicadas <- duplicated(t(cv))
print(columnas_duplicadas)

cv <- cv[, !columnas_duplicadas]
colnames(cv) <- paste0("col_", 1:ncol(cv))
#Elimino otra columnaa duplicadaa que el argumento no encuenrtra 

cv <- cv[, -62]

#Doy nombre a la posición [1,2] de provincias para después poder trabajar mejor
#Ya que convertiremos la primera fila en colnames

cv[1,2] <- "Provincia"
colnames(cv)

#Seleccionamos la primera fila del df y lo convertimos en un vector. Después, 
#Hacemos que los NA se sustituyan por el texto de su izquierda (Remplazamos NA`s
#por el año al que corresponde esa columnas)

df <- cv %>%
  slice(1) %>%
  unlist()

df <- na.locf(df)

#Ahora convertimos el vector en la fila 1 que después convrtiremos en colnames
#para trabajar mejor.

cv[1,] <- df 

#Juntamos la fila 1 y 2 a partir de la tercer columna separando el texto con "_" 
#y le rellenamos las dos columnas restantes con los nombres que nos vengan mejor 
#para trabajar
aa <- cv[1,]
aa <- c("","Provincia",paste(cv[1,3:ncol(cv)],cv[2,3:ncol(cv)], sep = "_"))

#Convertimos el vector aa en colnames

colnames(cv) = aa

#Quitamos la primera y la segunda fila, es información que ya indica colnames

cv <- cv[-(1:2), -(1)]
colnames(cv)

#Hacemos que todas las columnas que indican año_trimestre pivoten y dejen los
#valores que contenían las transacciones por un lado y el año_trimestre por otro

Transacciones_por_provincia <- cv %>% pivot_longer(cols = starts_with("Año"), 
                                                   names_to = "Año_Trimestre", 
                                                   names_prefix = "Año", 
                                                   values_to = "Transacciones",
                                                   values_drop_na = TRUE)

#Guardamos en la carpeta(en formato .csv) de datos pulidos y seguimos

write.csv(Transacciones_por_provincia, 
          file = "datos_pulidos/Transacciones_por_povincia.csv")

#----------------Índice de precios de la vivienda-------------------------------


ipv <- import(file = "./docs/datos/ipv.csv")

#Estos datos están bien, quitamos las dos columnas que no aportan y los guardamos
ipv <- ipv[,-(1:2)]

write.csv(ipv, file = "./datos_pulidos/indice_precio_vivienda.csv")

#rm(list = ls())


#----------------Renta por edad-------------------------------------------------

re <- import(file  = "./docs/datos/renta_edad.csv")

#Renombramos las columnas, seleccionamos lo que nos interesa y borramos el restante
#Exportamos
re <- re %>%
  rename(renta = "value") %>%
  select(!c("V1", "X"))

write.csv(re, file = "./datos_pulidos/renta_por_edad.csv")




#----------------Régimen tenencia de vivienda por edad--------------------------

vd <- import(file  = "./docs/datos/vivienda_datos.csv")

#Renombramos las columnas, seleccionamos lo que nos interesa y borramos el restante
#Exportamos
vd<- vd %>%
  rename(Porcentaje = "value") %>%
  select(!c("V1", "X"))

write.csv(vd, file = "./datos_pulidos/tenencia_de_vivienda.csv")
rm(list = ls())

#--------------------IMPORTAR DATOS CE / EUROSTAT-------------------------------
options(scipen = 999) #- para quitar la notación científica

library(eurostat) 
library(DT) 
library(tidyverse)

info <- search_eurostat("GDP", type = "all")
my_table <-"sdg_08_10"

#Comprobamos que es el PIB pc
label_eurostat_tables(my_table)

df_original <- get_eurostat(my_table, time_format = 'raw', keepFlags = TRUE)
df_names <- names(df_original)
df_original <- label_eurostat(df_original, code = df_names, fix_duplicated = TRUE)

#Creamos otro df para trabajor con él 

df <- df_original

#Ver que hay en el df
df_aa <- pjpv.curso.R.2022::pjp_dicc(df)
df_bb <- pjpv.curso.R.2022::pjp_valores_unicos(df, nn = 400)

#Vamos a hacer un poco de limpieza
obj_buenos <- c("df", "df_original", "df_bb")
rm(list = setdiff(ls(), obj_buenos))

#Vamos a seguir arreglando el df

df <- df |> 
  rename(year = time_code) |> 
  rename(PIB_pc = values) |> 
  rename(country = geo)

#Chain linked volumes (2010), euro per capita
#Solo queremos el PIB_pc
df <- df |> 
  filter(unit == "Chain linked volumes (2010), euro per capita")

#Eliminamos todo lo que nos molesta a la vista 
df <- df |> 
  select(-c(unit_code, values_code, unit, time, na_item_code, na_item, flags))

df <- df |>  mutate(year =  as.numeric(year))

df <- df |>  mutate(iso_2_code =  eurostat::harmonize_country_code(geo_code))

df <- df |> 
  select(-c(geo_code, flags_code))


library(fs)
dir_create("datos_pulidos")

#A continuación vamos a exportar los datos para luego importarlas más fácilmente #library(rio)

export(df, "./datos_pulidos/PIB_pc.csv", type = "csv")
#---------------DATOS SOBRE EL SALARIO POR NIVEL DE FORMACIÓN-------------------

library(rio)
library(tidyverse)
url <- "https://www.ine.es/jaxiT3/files/t/es/csv_bdsc/13931.csv?nocab=1"
df_ine <- import(url)
df_ine_01 <- df_ine |> 
  filter(Decil %in% ("Total decil")) |> 
  select("Periodo", "Tipo de jornada", "NIVELES DE FORMACION", "Total") |> 
  rename(year = Periodo) |> 
  rename(jornada = 'Tipo de jornada') |> 
  rename(formacion = 'NIVELES DE FORMACION') |>
  rename(salario = Total)

#VAMOS A CONVERTIR LA VARIABLE salario A NUMERIC

#R y el INE me han jodiedo la vida para pasar esto a numeric (antes no funcionaba)
df_ine_01 <- df_ine_01 |> 
  mutate(salario = as.numeric(gsub(",", ".", gsub("\\.", "", salario))))

export(df_ine_01,"./datos_pulidos/salario_formacion.csv", type = "csv")


#-----------------------DATOS SOBRE EL SALARIO POR EDADES-----------------------

url_1 <- "https://www.ine.es/jaxiT3/files/t/es/csv_bdsc/13928.csv?nocab=1"
df_ine_x1 <- import(url_1)

df_ine_02 <- df_ine_x1 |> 
  filter(Decil %in% ("Total decil")) |>
  select("Periodo", "Tipo de jornada", "Grupo de edad", "Total") |> 
  rename(year = Periodo) |> 
  rename(jornada = 'Tipo de jornada') |> 
  rename(grupo_edad = 'Grupo de edad') |>
  rename(salario = Total)

#PASAMOS A NUMERIC
df_ine_02 <- df_ine_02 |> 
  mutate(salario = as.numeric(gsub(",", ".", gsub("\\.", "", salario))))

export(df_ine_02,"./datos_pulidos/salario_grupo_edad.csv", type = "csv")
#------------------------------DATOS SOBRE EL IPC-------------------------------

url_2 <- "https://www.ine.es/jaxiT3/files/t/es/csv_bdsc/50908.csv?nocab=1"
df_ipc <- import(url_2)

df_ipc_01 <- df_ipc |> 
  filter(`Grupos ECOICOP` %in% c("Índice general", "04 Vivienda, agua, electricidad, gas y otros combustibles")) |> 
  select("Periodo", "Grupos ECOICOP", "Tipo de dato", "Total") |> 
  rename(year = Periodo) |>
  rename(grupo = 'Grupos ECOICOP') |> 
  rename(tipo_dato = `Tipo de dato` ) 

#PASAMOS A NUMERIC
df_ipc_01 <- df_ipc_01 |> 
  mutate(Total = as.numeric(gsub(",", ".", gsub("\\.", "", Total))))

#PARA SEPARAR EN LA VARIABLE YEAR LOS DATOS POR AÑOS Y MESES
#df_sep <- df_ipc_01 |> 
#  separate(col = year, into = c("year", "month"), sep = "M")

#df_sep <- df_sep |> 
#  mutate(month = paste0("M", month))

export(df_ipc_01, "./datos_pulidos/IPC_mas_vivienda.csv", type = "csv")

```

:::

---

# Evolución de la renta neta por edad

Iniciaremos analizando los datos de renta según la edad (como pueden imaginar, los jóvenes constituyen el grupo poblacional que dispone de menos renta), para, a continuación, adentrarnos en datos que muestran la evolución de los precios de la vivienda.

::: {.panel-tabset}

# Gráfico en movimiento

```{R}
#Cargamos datos
library(rio)
library(tidyverse)
library(gganimate)
library(ggthemes)
library(hrbrthemes)

#-

renta_edad <- read.csv("./datos_pulidos/renta_por_edad.csv")

dff  <- renta_edad %>% rename(tipo = Renta.anual.neta.media.por.persona.y.por.unidad.de.consumo) %>% filter(tipo == "Renta neta media por persona", Sexo == "Ambos sexos", !(Edad %in% c("De 18 a 64 años", "Menos de 18 años", "Total")))

p <- ggplot(dff, aes(x = Periodo, y = renta, color = Edad)) +
  geom_line(size = 1) +
  labs(title = "Evolución de la renta neta media por edad", subtitle = "(Euros corrientes)",
       x = "Año", y = "Renta neta") +
  theme_ipsum() + 
  theme(legend.position = "bottom",
        panel.grid.major = element_line(colour = "gray87", linetype = "dashed"),
        panel.background = element_rect(fill = "aliceblue"),
        panel.grid.minor = element_blank(),
        axis.text = element_text(family = "serif", size = 9, colour = "gray17")) + scale_color_manual(values = c("green4", "black", "blue", "red", "orange")) +
  geom_text(aes(label = Edad), nudge_x = 0.5, nudge_y = 0.5, hjust = 0)

p_animated <- p + transition_reveal(Periodo) +
  enter_fade() + 
  exit_fade()

animate(p_animated, nframes = 200, fps = 20)

```

# Gráfico fijo interactivo

```{R}
library(rio)
library(tidyverse)
library(gganimate)
library(ggthemes)
library(hrbrthemes)

renta_edad <- read.csv("./datos_pulidos/renta_por_edad.csv")

dff  <- renta_edad %>% rename(tipo = Renta.anual.neta.media.por.persona.y.por.unidad.de.consumo) %>% filter(tipo == "Renta neta media por persona", Sexo == "Ambos sexos", !(Edad %in% c("De 18 a 64 años", "Menos de 18 años", "Total")))

p6 <- ggplot(data=dff) +
  geom_line(aes(x = Periodo, y = renta, color = Edad, group = Edad)) +labs (title = "Evolución de la renta neta media por edad", subtitle = "(En euros corrientes)", y = "Renta", x = "Año") + theme_ipsum()

plotly::ggplotly(p6)
```

:::

Tenemos este primer gráfico dinámico, que básicamente lo hemos hecho para demostrar que lo podemos hacer. Sabemos que no es especialmente útil, pero sí vistoso, por eso hemos hecho esta presión interactiva pero estática del mismo gráfico

En este gráfico, cuyos datos están extraídos del INE podemos observar, como ya anticipábamos, que los jóvenes (16-29 años de edad) son el rango de edad que dispone de menos renta. Más notorio es, claro está, con los menores de 16 años. Los jóvenes de 16 a 29 años contaban con una renta media neta o disponible (después de impuestos) de 11.660€.

- La diferencia con el grupo de 30 a 44 años ha pasado de un 6’38% en 2008 a 10’13% en 2022. Un incremento de un 58’78%.

- Con el grupo de 45 a 64 años del 16’86% mencionado arriba a un 18’03%. Un incremento de un 6’94%.

- La mayor divergencia se da con el grupo de los mayores de 65 años. De una diferencia del 6’03% en 2008 a una del 21% en 2022. Un espectacular incremento del 248’23%.

Por tanto, la renta de lo jóvenes de entre 16 y 29 años es la que menos ha crecido: tan solo un 12’97% en 14 años.

Como podemos observar, no sólo es que los jóvenes tengan una renta disponible menor, si no que cada vez se queda más atrás respecto al resto. Los jóvenes, en términos de renta, son cada vez relativamente más tarde.

---

# Índice del nivel de Precios de la vivienda a nivel nacional

Ahora vamos a analizar cómo se han comportado los precios de la vivienda en general. Primero lo vamos a hacer observando el comportamiento de los precios de forma general a nivel nacional. Luego veremos cómo se ha comportado en términos de tasas de variación, y más tarde, el nivel de precios por comunidades autónomas y en diferentes momentos del tiempo.

```{R}
library(readxl)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(ggExtra)
library(pxR)

url <- "https://www.ine.es/jaxiT3/files/t/es/px/25171.px?nocab=1"
aa <- read.px(url)
write.csv(aa, file = "./datos_pulidos/data.csv")

df <- read.csv("./datos_pulidos/data.csv")

df1 <- df %>% dplyr::rename(ámbito = Comunidades.y.Ciudades.Autónomas, tipo = General..vivienda.nueva.y.de.segunda.mano, Valor = value) %>% filter (tipo == "General", Índices.y.tasas == "Índice", ámbito == "Nacional")

p1 <- ggplot(df1, aes(x = Periodo, y = Valor)) + labs(title = "Índice nivel de precios de la vivienda a nivel nacional", subtitle = "Base 100 = 2015", y = "Valor", x = "Periodo",) + geom_point() + geom_line() + theme_light() + rotateTextX()

p1

```

En este gráfico podemos observar cómo el nivel de precios general en españa tiene una forma de “uve”. Los precios caen de forma abrupta desde 2008 hasta 2013 (donde encontramos los valores más bajos) y luego vuelven a crecer más lentamente. Actualmente (2023T3) nos encontramos en niveles de precios similares a los de la burbuja, lo cual es negativo, pues ya era muy difícil acceder a la vivienda en la burbuja (sin endeudarse masivamente). Ahora, con el poco crecimiento de la renta con estos niveles de precios, también lo es. 

---

# Variación del Indice de Precios de la Vivienda

```{r}
df_IPV <- import("./datos_pulidos/indice_precio_vivienda.csv")

df <- import("./datos_pulidos/tenencia_de_vivienda.csv")

df_IPV_01 <- df_IPV |>
  filter(Índices.y.tasas == "Variación anual") |> 
  filter(Comunidades.y.Ciudades.Autónomas == "Nacional") |> 
  filter(General..vivienda.nueva.y.de.segunda.mano == "General")

df_media_anual <- df_IPV_01 |> 
  mutate(year = substr(Periodo, 1, 4)) |> 
  group_by(year) |> 
  summarise(media_salario = mean(value))

ggplot(df_media_anual, aes(x=year, y=media_salario)) +
  geom_segment( aes(x=year, xend= year, y=0, yend=media_salario), color="grey") +
  geom_point( color="orange", size=4) +
  theme_light() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("") +
  ylab("Índice del Precio de la Vivienda")
```

En este gráfico podemos observar las tasas de variación, de los niveles de precios por año. En este caso los datos son anuales. Sencillamente hemos sacado la media de los 4 trimestres para cada año. Aquí se puede ver claramente en qué años las tasas de variación fueron más negativas tras la explosión de la burbuja. Al contrario de lo que se suele pensar, las tasas más negativas fueron 2011, 2012 y 2013, no 2008. A partir de ahí se encadenan tasas positivas durante 10 años. Eso explica los altos niveles actuales.

---

# Mapa de coropletas: Vivienda por CCAA

A continuación comprobamos cómo ha evolucionado el precio de la vivienda por toda la geografía Española durante los últimos años. Para ello vamos a analizar los siguientes mapas de coropletas en los que, utilizamos un número índice con base 100 en 2015. 

```{R}

#Cargamos librerías

library(tidyverse)
library(rio)
library(mapSpain)
library(pxR)
library(dplyr)
library(ggthemes)
library(ggExtra) 
library(data.table)
library(fs)
library(sf)
library(patchwork)
library(plotly)

devtools::install_github("r-lib/conflicted")

#Empezamos creado el dataframe

url <- "https://www.ine.es/jaxiT3/files/t/es/px/25171.px?nocab=1"
aa <- read.px(url)
write.csv(aa, file = "./datos_pulidos/data.csv")
df <- read.csv("./datos_pulidos/data.csv")

#Empezamos con el manejo de datos/ limpieza
df1 <- df %>% dplyr::rename(ámbito = Comunidades.y.Ciudades.Autónomas, tipo = General..vivienda.nueva.y.de.segunda.mano, Valor = value) %>% filter (tipo == "General", Índices.y.tasas == "Índice", ámbito == "Nacional")

df1.1  <- df %>% rename(Territorio = Comunidades.y.Ciudades.Autónomas, tipo = General..vivienda.nueva.y.de.segunda.mano, Valor = value) 

df1.2 <- df1.1 %>% mutate(Territorio = case_when(
  Territorio == "01 Andalucía" ~ "Andalucía",
  Territorio == "02 Aragón" ~ "Aragón",
  Territorio == "03 Asturias, Principado de" ~ "Asturias, Principado de",
  Territorio == "04 Balears, Illes" ~ "Balears, Illes",
  Territorio == "05 Canarias" ~ "Canarias",
  Territorio == "06 Cantabria" ~ "Cantabria",
  Territorio == "07 Castilla y León" ~ "Castilla y León",
  Territorio == "08 Castilla - La Mancha" ~ "Castilla-La Mancha",
  Territorio == "09 Cataluña" ~ "Cataluña",
  Territorio == "10 Comunitat Valenciana" ~ "Comunitat Valenciana",
  Territorio == "11 Extremadura" ~ "Extremadura",
  Territorio == "12 Galicia" ~ "Galicia",
  Territorio == "13 Madrid, Comunidad de" ~ "Madrid, Comunidad de",
  Territorio == "14 Murcia, Región de" ~ "Murcia, Región de",
  Territorio == "15 Navarra, Comunidad Foral de" ~ "Navarra, Comunidad Foral de",
  Territorio == "16 País Vasco" ~ "País Vasco",
  Territorio == "17 Rioja, La" ~ "Rioja, La",
  TRUE ~ Territorio))

df3 <- df1.2 %>% filter (tipo == "General", Índices.y.tasas == "Índice", !(Territorio %in% c("Nacional", "18 Ceuta", "19 Melilla")))

prov <- pjpv.curso.R.2022::LAU2_prov_2020_canarias

ccaa <- prov %>% 
  group_by(ine_ccaa, ine_ccaa.n, ine_ccaa.n.pjp) %>% 
  summarise() %>% ungroup()

ccaa <- ccaa %>% rename(Territorio = ine_ccaa.n)

df4 <- df3 %>% filter(Periodo == "2023T3")

df5 <- full_join(ccaa, df4, by = "Territorio") %>% filter( !(Territorio %in% c("Ceuta", "Melilla")))

df6 <- df3 %>% 
  filter(Periodo == "2018T3")

df7 <- full_join(ccaa, df6, by = "Territorio") %>% filter( !(Territorio %in% c("Ceuta", "Melilla")))

df8 <- df3 %>% filter(Periodo == "2015T3")

df9 <- full_join(ccaa, df8, by = "Territorio") %>% filter( !(Territorio %in% c("Ceuta", "Melilla")))

df10 <- df3 %>% filter(Periodo == "2011T3")

df11 <- full_join(ccaa, df10, by = "Territorio") %>% filter( !(Territorio %in% c("Ceuta", "Melilla")))

#Empezamos a dibujar mapas

escala_limites <- c(100, 170)

p4 <- ggplot(df5, aes(fill = Valor)) + 
  geom_sf() +
  geom_sf_label(aes(label = as.character(Valor)), size = 3, color = "black") +
  scale_fill_viridis_c(guide = "legend",limits = escala_limites) +
  labs(title = "Nivel de precios de la vivienda 2023") + 
  theme_void()

p5 <- ggplot(df7, aes(fill = Valor)) + 
  geom_sf() +
  geom_sf_label(aes(label = as.character(Valor)), size = 3, color = "black") +
  scale_fill_viridis_c(guide = "legend", limits = escala_limites) +
  labs(title = "Nivel de precios de la vivienda 2018") + 
  theme_void()

p6 <- ggplot(df9, aes(fill = Valor)) + 
  geom_sf() +
  geom_sf_label(aes(label = as.character(Valor)), size = 3, color = "white") +
  scale_fill_viridis_c(guide = "legend",limits = escala_limites) +
  labs(title = "Nivel de precios de la vivienda 2015") + 
  theme_void()

p7 <- ggplot(df11, aes(fill = Valor)) + 
  geom_sf() +
  geom_sf_label(aes(label = as.character(Valor)), size = 3, color = "black") +
  scale_fill_viridis_c(guide = "legend",limits = escala_limites) +
  labs(title = "Nivel de precios de la vivienda 2011") + 
  theme_void()

#Combinar todos los gráficos

p9 <-p7 + p6 +p5 +p4

p9

```

Estos mapas de coropletas reflejan los niveles de precios de la vivienda en 6 momentos diferentes del tiempo. El primero es del tercer trimestre del año 2007. En ese momento los precios, como podemos observar, son los más altos. Este es el punto más elevado de la burbuja. Los años siguientes reflejan el pinchazo de la burbuja, con un descenso continuado de los precios hasta 2013. Que es el punto más bajo. Hemos decidido poner el año 2015 por ser el año de la base 100. A partir de ahí, vemos cómo en los años posteriores los precios son ya más elevados que en 2015, y particularmente en 2023, ligeramente por debajo, pero sin haber una burbuja. O, al menos, no parece haberla. 

Al ser mapas de coropletas podemos sacar conclusiones acerca de en qué comunidades han aumentado más los precios y por tanto, dónde es más difícil acceder a la vivienda, ceteris paribus. En el último gráfico destacan claramente la Comunidad de Madrid, Cataluña y Baleares. Esto no nos sorprende, tanto la Comunidad de Madrid, como Cataluña son regiones muy dinámicas donde, además, se encuentran las principales ciudades de España. Baleares, por su parte, es una de las regiones más turísticas, donde la oferta de inmuebles tampoco es demasiado elevada. Destacan también en segunda fila País Vasco (región muy dinámica), Andalucía y Canarias (regiones muy turísticas).

Tal vez os habéis fijado en que estos mapas no concuerdan exactamente con lo que hemos visto hace dos gráficos (se veía que el nivel general de precios de la vivienda es ahora igual al del punto más alto de la burbuja y, sin embargo, en los mapas parece que en 2007T3 los precios son mucho más elevados que en la actualidad).

Esto se debe a que hay más viviendas allá donde más está subiendo el precio como se observa en el gráfico (que hay que insertar). La explicación de la afirmación anterior que parece a priori contradictoria, es que aunque hay más vivienda en esta zona (oferta elevada), la demanda es todavía más elevada que la oferta.

Este continuo encarecimiento de las viviendas se traduce en que los jóvenes cambian su régimen de tenencia de vivienda:P$OE

---
 
# Régimen de viviendas de 16 a 29 años

```{R}
#Hogares por regimen de tenencia edad
#Cargamos liberías
library(ggplot2)
library(hrbrthemes)
library(tidyverse)
library(pxR)

url4 <- "https://www.ine.es/jaxiT3/files/t/es/px/9994.px?nocab=1"
ac <- read.px(url4)
write.csv(ac, file = "./datos_pulidos/data_1.csv", sep = ",")
vivienda_edad <- read.csv("./datos_pulidos/data_1.csv")

dd <- vivienda_edad %>%
  dplyr::rename(regimen = Régimen.de.tenencia.de.la.vivienda.principal, edad = Edad.de.la.persona.de.referencia, sexo = Sexo.de.la.persona.de.referencia) %>%
  filter(edad == "De 16 a 29 años", sexo == "Ambos sexos")

p30 <- dd %>%
  ggplot(aes(x = Periodo, y = value, fill = regimen)) +
  geom_bar(stat = "identity", position = "stack") +
  theme_ipsum() +
  labs(x = "Año", y = "% según régimen de tenencia", 
       title = "Régimen de vivienda de 16 a 29 años",
       subtitle = "Datos porcentuales",
       caption = "Elaboración propia a partir de datos del INE") +
  scale_fill_manual(values = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3"), 
                    labels = c("Alquiler a precios de mercado", "Alquiler inferior al precio de mercado", "Cesión", "Propiedad")) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        plot.caption = element_text(hjust = 0.5),
        plot.title = element_text(hjust = 0.5, color = "black", size = 18, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, size = 14))

p30
```

En este gráfico podemos observar cómo el régimen de vivienda entre los jóvenes ha ido variando a lo largo del tiempo. La mayor sustitución ha sido de régimen de propiedad al de alquiler a precios de mercado. También ha aumentado ligeramente el régimen de cesión, es decir; los jóvenes se han trasladado a opciones más asequibles. Aunque los alquileres también suben en las grandes ciudades, siguen siendo opciones más asumibles que pagar la entrada de la hipoteca y su mensualidad, por no hablar de fórmulas utilizadas como el compartir piso.

---

# Otros gráficos bonitos pero poco útiles sobre el salario

::: {.panel-tabset}

# Rigeline por grupo de edad

```{R}
library(tidyverse)
library(rio)
library(ggplot2)
library(ggridges)

df_edad <- import("./datos_pulidos/salario_grupo_edad.csv")

p1<- ggplot(df_edad, aes(x = salario, y = grupo_edad, fill = grupo_edad)) +
  geom_density_ridges() +
  theme_ridges() + 
  theme(legend.position = "none")

p1
```

# Rigeline por formación

```{R}
library(tidyverse)
library(rio)
library(ggplot2)
library(ggridges)

df_formacion <- import("./datos_pulidos/salario_formacion.csv")

p4<- ggplot(df_formacion, aes(x = salario, y = formacion, fill = formacion)) +
  geom_density_ridges() +
  theme_ridges() + 
  theme(legend.position = "none")

p4
```

# Barras agrupadas por edad

```{R}
library(tidyverse)
library(rio)
library(ggplot2)
library(ggridges)

df_edad <- import("./datos_pulidos/salario_grupo_edad.csv")

df_edad_01 <- df_edad |> 
  filter(grupo_edad != "Total") |> 
  filter()

df_edad_01$year <- factor(df_edad_01$year)

p2 <- ggplot(df_edad_01, aes(fill = grupo_edad, y = salario, x = year))+
  geom_bar(position = "dodge", stat = "identity")+
  labs(title = "Salario por grupo de edad")

p2
```

# Barras agrupadas por formación

```{R}
library(tidyverse)
library(rio)
library(ggplot2)
library(ggridges)

df_formacion <- import("./datos_pulidos/salario_formacion.csv")

df_form_01 <- df_formacion |> 
  filter(formacion != "Total")

df_form_01$year <- factor(df_form_01$year)

p5 <- ggplot(df_form_01, aes(fill = formacion, y = salario, x = year))+
  geom_bar(position = "dodge", stat = "identity")+
  labs(title = "Salario por formación")

p5
```

:::

--- 

# Mas información sobre el tema

un video de blablabla

<center><iframe width="560" height="315" src="https://www.youtube.com/live/EtIErMd1EYM?si=-LNzHLRcepGHZ-r5"></iframe></center>


